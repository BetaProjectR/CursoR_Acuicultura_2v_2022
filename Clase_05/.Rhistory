knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(UsingR)
library(dplyr)
set.seed(123)
My_Theme = theme(
axis.title.x = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 18))
dat<- data.frame(Tratamiento=rep(c("Stress", "Control"), each=10), Cortisol=c(rnorm(10, 20, 5),rnorm(10, 10, 5)))
boxplot(dat$Cortisol ~ dat$Tratamiento, xlab = "Tratamiento", ylab = "Cortisol nanogramos / mililitro", col = c("lightblue","red"))
ggplot(dat, aes(x=Tratamiento, y=Cortisol, color=Tratamiento))+
geom_boxplot()+
labs( x="Tratamiento", y="Cortisol nanogramos / mililitro") + My_Theme
set.seed(123)
My_Theme = theme(
axis.title.x = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 18))
dat<- data.frame(Tratamiento=rep(c("Stress", "Control"), each=10), Cortisol=c(rnorm(10, 20, 5),rnorm(10, 10, 5)))
ggplot(dat, aes(x=Tratamiento, y=Cortisol, fill=Tratamiento))+
geom_boxplot()+
labs( x="Tratamiento", y="Cortisol nanogramos / mililitro") + My_Theme+theme(legend.position='none')
ggplot(data = father.son) +
geom_point(aes(x = fheight, y = sheight),
col = 'darkblue',
size = 3,
alpha = 1/2) +
geom_smooth(aes(x = fheight, y = sheight), method = 'lm')
ggplot(data = father.son) +
geom_point(aes(x = fheight, y = sheight),
col = 'darkblue',
size = 2,
alpha = 1/2) +
geom_smooth(aes(x = fheight, y = sheight), method = 'lm')
ggplot(data = father.son) +
geom_point(aes(x = fheight, y = sheight),
col = 'darkblue',
size = 2,
alpha = 1/2) +
geom_smooth(aes(x = fheight, y = sheight), method = 'lm')+
labs( x="Tratamiento", y="Cortisol nanogramos / mililitro")
ggplot(data = father.son) +
geom_point(aes(x = fheight, y = sheight),
col = 'darkblue',
size = 2,
alpha = 1/2) +
geom_smooth(aes(x = fheight, y = sheight), method = 'lm')+
labs( x="tamaño padres", y="Tamaño hijos")
ggplot(data = father.son)
ggplot(data = father.son)
library(ggplot2)
# LIBRERÍAS
library(UsingR)
# Primera capa
ggplot(data = father.son)
# Primera capa
ggplot(data = father.son) +
geom_point(aes(x = fheight, y = sheight))
# Cambia formato de dimbolos
ggplot(data = father.son) +
geom_point(aes(x = fheight, y = sheight),
col = 'darkblue',
size = 2,
alpha = 1/2)
# Agrega linea de regresión
ggplot(data = father.son) +
geom_point(aes(x = fheight, y = sheight),
col = 'darkblue',
size = 2,
alpha = 1/2) +
geom_smooth(aes(x = fheight, y = sheight), method = 'lm')
# Cambia etiquetas y tamaño de los ejes
ggplot(data = father.son) +
geom_point(aes(x = fheight, y = sheight),
col = 'darkblue',
size = 2,
alpha = 1/2) +
geom_smooth(aes(x = fheight, y = sheight), method = 'lm')+
labs( x="Tamaño padres", y="Tamaño hijos") + My_Theme
# ESTUDIO DE CASO: COMPARACIÓN TAMAÑO ENTRE SEXOS
Sexo <- rep(c("Male", "Female"), each=10)
Peso <- c(rnorm(10, 180, 10),rnorm(10, 140, 10))
animal <- data.frame(Sexo, Peso)
# Primera boxplot
ggplot(animal, aes(x=Sexo, y=Peso))+
geom_boxplot()
# Colorea cada caja y agrega etiquetas
ggplot(animal, aes(x=Sexo, y=Peso, fill=Tratamiento))+
geom_boxplot()
# Colorea cada caja y agrega etiquetas
ggplot(animal, aes(x=Sexo, y=Peso, fill=Sexo))+
geom_boxplot()
# Elimina leyenda
ggplot(animal, aes(x=Sexo, y=Peso, fill=Tratamiento))+
geom_boxplot()+
My_Theme+theme(legend.position='none')
# Elimina leyenda
ggplot(animal, aes(x=Sexo, y=Peso, fill=Sexo))+
geom_boxplot()+
My_Theme+theme(legend.position='none')
# **Two Sample t-test**
help(t.test)
t.test(Peso ~ Sexo, animal, alternative = c("two.sided"), var.equal=TRUE)
set.seed(10)
# Creación de una muestra aleatoria de 30 porciones con media superior a la deseada 810
filete <- rnorm(30,810)
# media deseada.
Media <- 800
# Comparación de la media muestral con la media deseada
test <- t.test(filete, mu=Media)
print(test)
#  Ejercicio 1: Compare con H1: female > male usando alternative ="g".
t.test(Peso ~ Sexo, animal, alternative = c("g"), var.equal=TRUE)
t.test(Peso ~ Sexo, animal, alternative = c("two.sided"), var.equal=TRUE)
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(UsingR)
library(dplyr)
cor.test(father.son$fheight, father.son$sheight,
alternative = c("two.sided"))
t.test(Cortisol ~ Tratamiento, dat, var.equal=TRUE,
alternative = c("two.sided"))
t.test(Cortisol ~ Tratamiento, dat, var.equal=TRUE,
alternative = c("two.sided"))
t.test(Cortisol ~ Tratamiento, dat, var.equal=TRUE,
alternative = c("g"))
curve(dt(x, df=18), from=-5, to=5, col='blue', ylab = 'Density', xlab = "t-values", lwd=3, cex.lab=1.5, cex.axis=1.5)
abline(v=qt(0.975, df=18),lty= 2, col = 'blue')
abline(v= - qt(0.975, df=18),lty= 2, col = 'blue')
text(-3.6, 0.15, "t-obs. = -4,18", cex=1.5)
arrows(x0 = -3.28,
y0 = 0.1,
x1 = -4.41,
y1 = 0.004)
text(0, 0.135, "No rechaza", col="blue", cex=1.5)
text(-3.5, 0.35, "Rechaza H0", col="red", cex=1.5)
text(3.5, 0.35, "Rechaza H0", col="red", cex=1.5)
